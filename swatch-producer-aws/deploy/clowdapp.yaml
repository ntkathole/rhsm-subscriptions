---
apiVersion: v1
kind: Template
metadata:
  name: swatch-producer-aws

parameters:
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: MEMORY_REQUEST
    value: 1000Mi
  - name: MEMORY_LIMIT
    value: 1400Mi
  - name: CPU_REQUEST
    value: 350m
  - name: CPU_LIMIT
    value: 1500m
  - name: ENV_NAME # naming convention is env-$BONFIRE_APP_NAME (from bonfire config yaml file)
    value: env-swatch-producer-aws
  - name: IMAGE
    value: quay.io/cloudservices/swatch-producer-aws
  - name: IMAGE_TAG # bonfire takes precedence and pulls latest unless the bonfire -i flag is used
    value: latest
  - name: ENABLE_SPLUNK_HEC
    value: 'true'
  - name: SPLUNK_SOURCE
    value: 'rhsm-subscription-hec'
  - name: SPLUNK_SOURCE_TYPE
    value: 'springboot_server'
  - name: SPLUNK_HEC_URL
    value: https://splunk-hec.redhat.com:8088
  - name: SPLUNK_HEC_BATCH_SIZE
    value: '0'
  - name: SPLUNK_HEC_RETRY_COUNT
    value: '3'
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: swatch-producer-aws
  spec:
    envName: ${ENV_NAME}

    kafkaTopics:
      - replicas: 1
        partitions: 1
        topicName: platform.rhsm-subscriptions.tally

    database:
      name: db
      version: 12

    pullSecrets:
      name: ${IMAGE_PULL_SECRET}

    deployments:
      - name: swatch-producer-aws
        minReplicas: 1
        webServices:
          public:
            enabled: true
        podSpec:
          image: ${IMAGE}:${IMAGE_TAG}
          command:
            - /bin/bash
            - /usr/local/s2i/run
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          env:
            - name: ENABLE_SPLUNK_HEC
              value: ${ENABLE_SPLUNK_HEC}
            - name: SPLUNKMETA_namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPLUNKMETA_host
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SPLUNK_HEC_URL
              value: ${SPLUNK_HEC_URL}
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-hec-external
                  key: token
            - name: SPLUNK_SOURCE
              value: ${SPLUNK_SOURCE}
            - name: SPLUNK_SOURCE_TYPE
              value: ${SPLUNK_SOURCE_TYPE}
            - name: SPLUNK_HEC_BATCH_SIZE
              value: ${SPLUNK_HEC_BATCH_SIZE}
            - name: SPLUNK_HEC_RETRY_COUNT
              value: ${SPLUNK_HEC_RETRY_COUNT}
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: pinhead
              mountPath: /pinhead
          volumes:
            - name: logs
              emptyDir:
            - name: pinhead
              secret:
                secretName: pinhead
