project(":clients:cloudigrade-client") {
    ext {
        api_spec_path = "${projectDir}/cloudigrade-api-spec.yaml"
        config_file = "${projectDir}/cloudigrade-client-config.json"
    }
}

project(":clients:cloudigrade-internal-client") {
    apply plugin: "org.openapi.generator"

    ext {
        api_spec_path = "${projectDir}/cloudigrade-internal-api-spec.yaml"
        config_file = "${projectDir}/cloudigrade-internal-client-config.json"
    }
}

project(":clients:insights-inventory-client") {
    apply plugin: "swatch.java-conventions"
    apply plugin: "org.openapi.generator"
    apply plugin: "de.undercouch.download"

    ext {
        api_spec_path = "${buildDir}/api.spec.yaml"
        config_file = "${projectDir}/insights-inventory-client-config.json"
    }

    // work around https://github.com/OpenAPITools/openapi-generator/issues/8255 by downloading the spec manually
    task downloadSpec(type: Download) {
        src 'https://raw.githubusercontent.com/RedHatInsights/insights-host-inventory/075f8e4433ecfb2e227e02108096847242e14e19/swagger/api.spec.yaml'
        dest buildDir
        overwrite false
    }

    task downloadSystemProfileSpec(type: Download) {
        src 'https://raw.githubusercontent.com/RedHatInsights/insights-host-inventory/d479778d9ae72fea9a493429ea44142364648ec5/swagger/system_profile.spec.yaml'
        dest buildDir
        overwrite false
    }

    tasks.openApiGenerate.dependsOn downloadSpec
    tasks.openApiGenerate.dependsOn downloadSystemProfileSpec

    dependencies {
        compileOnly 'org.springframework.boot:spring-boot'
    }
}

project(":clients:rh-marketplace-client") {
    apply plugin: "swatch.java-conventions"

    ext {
        api_spec_path = "${projectDir}/rh-marketplace-api-spec.yaml"
        config_file = "${projectDir}/rh-marketplace-client-config.json"
    }

    dependencies {
        compileOnly "org.springframework:spring-web"
        compileOnly "javax.servlet:javax.servlet-api"
    }
}

project(":clients:product-client") {
    ext {
        api_spec_path = "${projectDir}/product-api-spec.yaml"
        config_file = "${projectDir}/product-client-config.json"
    }
}

project(":clients:prometheus-client") {
    ext {
        api_spec_path = "${projectDir}/prometheus-query-api-spec.yaml"
        config_file = "${projectDir}/prometheus-client-config.json"
    }
}

project(":clients:rbac-client") {
    apply plugin: "swatch.java-conventions"
    apply plugin: "org.openapi.generator"
    apply plugin: "de.undercouch.download"

    ext {
        api_spec_path = "${buildDir}/openapi.json"
        config_file = "${projectDir}/rbac-client-config.json"
    }

    // work around https://github.com/OpenAPITools/openapi-generator/issues/8255 by downloading the spec manually
    task downloadSpec(type: Download) {
        src 'https://raw.githubusercontent.com/RedHatInsights/insights-rbac/stable/docs/source/specs/openapi.json'
        dest buildDir
        overwrite false
    }

    tasks.openApiGenerate.dependsOn downloadSpec

    dependencies {
        compileOnly "org.springframework:spring-web"
        compileOnly "javax.servlet:javax.servlet-api"
    }
}

project(":clients:rhsm-client") {
    apply plugin: "swatch.java-conventions"

    ext {
        api_spec_path = "${projectDir}/rhsm-client-spec.yaml"
        config_file = "${projectDir}/rhsm-client-config.json"
    }

    dependencies {
        testImplementation libraries["wiremock-jre8"]
    }
}

project(":clients:subscription-client") {
    ext {
        api_spec_path = "${projectDir}/subscription-api-spec.yaml"
        config_file = "${projectDir}/subscription-client-config.json"
    }
}

project(":clients:user-client") {
    ext {
        api_spec_path = "${projectDir}/user-api-spec.yaml"
        config_file = "${projectDir}/user-client-config.json"
    }
}

configure(subprojects) {
    apply plugin: "java-library"
    apply plugin: "swatch.spring-boot-dependencies-conventions"
    apply plugin: "swatch.java-conventions"
    apply plugin: "org.openapi.generator"

    openApiValidate {
        inputSpec = api_spec_path
    }

    task generateApiDocs(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
        generatorName = "html"
        inputSpec = api_spec_path
        outputDir = "$buildDir/docs"
        generateApiDocumentation = true
        generateModelDocumentation = true
        generateModelTests = false
        generateApiTests = false
        withXml = false
    }

    openApiGenerate {
        inputSpec = api_spec_path
        configFile = config_file
        outputDir = "${buildDir}/generated"
        generatorName = "java"
        configOptions = [
                generatePom: "false",
                library: "resteasy",
                java8: "true",
                dateLibrary: "java8"
        ]
    }

    dependencies {
        api project(':clients-core')
        api "javax.annotation:javax.annotation-api"
        api "org.jboss.resteasy:resteasy-client"
        api "org.jboss.resteasy:resteasy-multipart-provider"

        api "com.fasterxml.jackson.core:jackson-annotations"
        api "com.fasterxml.jackson.core:jackson-databind"
        api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

        api "org.springframework:spring-context"
        api "org.slf4j:slf4j-api"
        api "io.swagger:swagger-annotations"
        api libraries["jsr305"]
        api libraries["jackson-databind-nullable"]
    }

    sourceSets.main.java.srcDirs += "${buildDir}/generated/src/main/java"

    compileJava.dependsOn tasks.openApiGenerate
}
